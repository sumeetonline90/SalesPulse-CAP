sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/model/json/JSONModel"],(e,s,t)=>{"use strict";return e.extend("com.sap.salespulse.salespulseui.controller.Main",{onInit(){this.getView().setModel(new t,"viewModel")},onFileChange(e){const t=this.byId("fileUploader");const o=t.getDomRef();const r=o.querySelector('input[type="file"]');const l=this.byId("uploadButton");if(r&&r.files&&r.files.length>0){const e=r.files[0];l.setEnabled(true);s.show("File selected: "+e.name)}else{l.setEnabled(false)}},async onUpload(){const e=this.byId("fileUploader");const t=e.getDomRef();const o=t.querySelector('input[type="file"]');if(!o||!o.files||o.files.length===0){s.show("Please select a file first");return}const r=o.files[0];if(!r.name.toLowerCase().endsWith(".xlsx")){s.show("Please select an Excel file (.xlsx)");return}s.show("Uploading file...");try{const t=await fetch("/sales-service/",{method:"HEAD",headers:{Accept:"application/json"}});if(!t.ok){throw new Error(`Failed to get CSRF token: ${t.status}`)}const o=t.headers.get("x-csrf-token");if(!o){throw new Error("CSRF token not received from server")}const l=await this.readFileAsBase64(r);const n={excel:l};const a=await fetch("/sales-service/uploadExcel",{method:"POST",headers:{"Content-Type":"application/json","x-csrf-token":o},body:JSON.stringify(n)});if(!a.ok){const e=await a.text();throw new Error(e||"Upload failed")}const i=await a.json();const c=i.value||i||"File uploaded successfully!";s.show(c);this.onRefresh();e.clear();this.byId("uploadButton").setEnabled(false)}catch(e){console.error("Upload error:",e);s.show("Upload failed: "+e.message)}},readFileAsBase64(e){return new Promise((s,t)=>{const o=new FileReader;o.onload=e=>{try{const t=e.target.result.split(",")[1];s(t)}catch(e){t(new Error("Error processing file: "+e.message))}};o.onerror=()=>{t(new Error("Error reading file"))};o.readAsDataURL(e)})},onUploadComplete(e){const t=e.getParameter("response");if(t){s.show("Upload completed: "+t);this.onRefresh()}},onTypeMissmatch(e){s.show("Please select an Excel file (.xlsx)")},onRefresh(){const e=this.byId("salesTable");const t=e.getBinding("items");if(t){t.refresh();s.show("Data refreshed")}else{const e=this.getView().getModel();if(e){e.refresh(true);s.show("Model refreshed")}}}})});
//# sourceMappingURL=Main.controller.js.map